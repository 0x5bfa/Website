@use "src/styles/mixins" as *;

.textbox {
    border: none;
    outline: none;
    box-sizing: border-box;
    padding: 6px 6px 5px 10px;
    width: 100%;
    min-height: 30px;
    color: var(--text-color-primary);
    background-color: transparent;
    font: {
        size: var(--control-font-size);
        weight: normal;
    }
    &::-webkit-search-decoration,
    &::-webkit-search-cancel-button,
    &::-webkit-search-results-button,
    &::-webkit-search-results-decoration {
        -webkit-appearance:none;
    }
    &::placeholder {
        user-select: none;
        color: var(--text-color-secondary);
    }
    &:disabled {
        pointer-events: none;
        color: var(--text-color-disabled);
        &::placeholder {
            color: var(--text-color-disabled);
        }
    }
    
    &-underline {
        pointer-events: none;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-bottom: 1px solid var(--control-strong-stroke-default);
        border-radius: calc(var(--control-corner-radius) - 0.75px);        
        &-frame {
            width: 100%;
            position: relative;
            overflow: hidden;
            border-radius: var(--control-corner-radius);
            &:focus-within,
            &.flyout-visible {
                .textbox-underline {
                    border-radius: 0;
                    border-bottom: 2px solid var(--accent-color-default);
                }
            }
            &.flyout-visible {
                &,
                .textbox-container {
                    border-radius: var(--control-corner-radius) var(--control-corner-radius) 0 0;
                }
            }
        }
    }
    &-container {
        @include flex($align: center);
        border-radius: var(--control-corner-radius);
        border: 1px solid var(--control-stroke-default);
        background-color: var(--control-color-default);
        background-clip: padding-box;
        &:hover {
            background-color: var(--control-color-secondary);
        }
        :global {
            &.disabled {
                pointer-events: none;
                background-color: var(--ControlFillColorDisabled);
                + .textbox-underline {
                    display: none;
                }
            }
        }
    }
    &-container:focus-within,
    &-underline-frame.flyout-visible &-container {
        border-color: var(--control-stroke-default);
        background-color: var(--ControlFillColorInputActive);
        .textbox::placeholder {
            color: var(--text-color-tertiary);
        }
        .textbox-buttons {
            .textbox-clear-button,
            .textbox-reveal-button {
                display: flex;
            }
        }
    }
    &-buttons {
        @include flex($align: center);
    }
    &-button {
        @include flex($align: center, $justify: center);
        border: none;
        width: 30px;
        height: 22px;
        box-sizing: border-box;
        padding: 4px 0;
        margin-right: 4px;
        border-radius: var(--control-corner-radius);
        background-color: transparent;
        &:hover {
            background-color: var(--subtle-color-secondary);
        }
        &:active {
            background-color: var(--subtle-color-tertiary);
            svg {
                color: var(--text-color-tertiary);
            }
        }
        &.textbox-clear-button,
        &.textbox-reveal-button {
            display: none;
            &:active {
                display: flex;
            }
        }
        &.textbox-clear-button svg {
            width: 12px;
            height: auto;
        }
        svg {
            color: var(--text-color-secondary);
            width: 14px;
            height: auto;
        }
    }
}