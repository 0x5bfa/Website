@use "../mixins" as *;

/*
 * Section 1 (Hero)
 */

:global {

    // Outer section
    #hero-section {
        overflow: hidden;
        position: relative;
        border-bottom: 1px solid var(--divider-color-default);
        height: 75vh;
        min-height: 584px;
        max-height: 1024px;

        // Inner Section
        .page-section-inner {
            position: relative;
            display: grid;
            grid-template-columns: 1fr 1.5fr;
            gap: 64px;
            align-items: center;
        }
        
        // Custom button styling
        // Applied on download and source buttons respectively
        .button {
            padding: 7px 12px;
            svg {
                @include icon($size: 18px);
            }
        }
        .style-standard .hero-button-inner {
            color: var(--text-color-secondary);
            h5 {
                color: var(--text-color-primary);
            }
        }
        #hero-download-button {
            min-width: 128px;
        }

        // Properly position download source flyout
        .split-button {
            position: relative;
            .menu-flyout-container {
                display: contents;
                &:last-child .button {
                    padding: 0 8px;
                    svg {
                        @include icon($size: 12px);
                    }
                }
            }
        }

        // Backdrop canvas -- RainbowCanvas()
        canvas {
            z-index: -1;
            opacity: 0.5;
            mask: radial-gradient(at bottom right, var(--background-base), transparent 70%);
            width: 100vh;
            height: 100vh;
            position: absolute;
            bottom: 0;
            right: 0;
            @media (prefers-color-scheme: dark) {
                opacity: 0.4;
            }
        }
    }
}

// Hero container elements
.hero- {

    // Left container
    &left {
        @include flex($direction: column, $justify: center);
        flex: 1 1 auto;
    }

    // Right container
    &right {
        @include flex($align: center);
        height: 100%;
        img {
            position: absolute;
            right: 0;
            max-width: 100%;
            max-height: 100%;
            -webkit-user-drag: none;
            user-select: none;
            aspect-ratio: 1280 / 960;
            overflow: hidden;
            box-shadow: var(--window-elevation);
            border-radius: calc(var(--overlay-corner-radius) / 2);
            background-color: rgba(var(--mica-tint), calc(var(--mica-tint-opacity) / 1.5));
            border: 1px solid var(--surface-stroke-default);
            border-radius: calc(var(--overlay-corner-radius) / 2);
            backdrop-filter: blur(60px) saturate(150%);             
        }
    }

    // Inner hero buttons
    &button-inner {
        @include flex($direction: column);
        font-size: 1.1rem;
        line-height: normal;
        margin-left: 8px;
        h5 {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 8px;
            margin: 0;
        }
    }

    // Hero image container
    &image-container {
        @include flex($align: center, $justify: center);
        position: relative;
        width: 100%;
        height: 100%;
        max-height: 768px;
    }
}

// Hero section small device support
@media only screen and (max-width: 1024px) {
    :global {

        // Remove height constraints on outer container
        #hero-section {
            height: auto;
            max-height: unset;

            // Position inner containers vertically
            .page-section-inner {
                grid-template-columns: auto;
            }
        }
    }
    
    .hero- {

        // Centrally align content in the left container
        &left {
            text-align: center;
            align-items: center;
            .buttons-spacer {
                justify-content: center;
            }
        }

        // Properly position hero image
        &right img {
            position: relative;
            max-width: 708px;
            width: 100%;
            height: auto;
        }
    }
}

/*
 * Section 2 (Design)
 */

// Inner section
:global(#design-section .page-section-inner) {
    @include flex($direction: column, $align: center);
    overflow: hidden;
    text-align: center;
}

// Image container (Screenshot + Wallpaper)
.design-image {
    @include flex($direction: column, $justify: center, $align: center);
    position: relative;
    width: 80vw;
    height: 100%;
    margin-top: 164px;
    text-align: center;
}

// Screenshot and wallpaper styling
.files- {
    &screenshot, &wallpaper {
        -webkit-user-drag: none;
        user-select: none;
        height: auto;
    }
    &screenshot {
        position: absolute;
        top: -36px;
        left: 0;
        right: 0;
        margin: 0 auto;
        width: 70%;
        max-width: 1024px;
        z-index: 1;
        background-color: rgba(var(--mica-tint), var(--mica-tint-opacity));
        border: 1px solid var(--surface-stroke-default);
        border-radius: var(--overlay-corner-radius);
        backdrop-filter: blur(60px) saturate(150%);
        box-shadow: var(--window-elevation);
    }
    &wallpaper {
        position: relative;
        width: 90%;
        max-width: 1440px;
        border-radius: calc(var(--overlay-corner-radius) * 1.5);
        border: 1px solid var(--card-stroke-default);
    }
}


// Design section small device support
@media only screen and (max-width: 1024px) {

    // Enlarge wallpaper and screenshot
    .design-image,
    .files-wallpaper {
        width: 100%;
    }
    .files-screenshot {
        top: 0;
    }
}

@media only screen and (max-width: 768px) {

    // Add some margins to account for more space available
    .design-image {
        margin-top: 48px;
    }

    // Screenshot and wallpaper
    .files- {

        // Position screenshot wihin wallpaper
        &screenshot {
            width: 105%;
            left: -2.5%;
            top: 32px;
            transform: none !important; // Prevent parallax scrolling
            border-radius: calc(var(--overlay-corner-radius) / 2);
        }

        // Fit wallpaper to viewport
        &wallpaper {
            object-fit: cover;
            object-position: bottom;
            height: 80vw;
            width: 180%;
            border-radius: 0;
        }
    }
}

/*
 * Section 3 (Features)
 */

:global {

    // Outer section
    #features-section {
        background-color: var(--background-base);

        // Inner section
        .page-section-inner {
            @include flex($gap: 48px);
        }
    }
}

// Animations for the feature previews

// Panel entrance animation
@keyframes feature-preview {
    from {
        opacity: 0;
        transform: translateY(48px) scale(0.9);
        transform-origin: bottom;
    }
}

// Cloud icon entrance animation
@keyframes cloud-provider {
    from {
        opacity: 0;
        transform: rotate(var(--provider-rotate)) scale(0.5);
    }
}

// Cloud icon float animation
@keyframes cloud-provider-float {
    0% {
        transform: rotate(var(--provider-rotate)) translateY(0);
    }
    50% {
        transform: rotate(calc(var(--provider-rotate) * -1)) translateY(-10px);
    }
    to {
        transform: rotate(var(--provider-rotate)) translateY(0);
    }
}

// File status indicator entrance animation
@keyframes cloud-status-icon {
    from {
        transform: scale(0.75);
        opacity: 0;
    }
}

// Preview pane entrance animation
@keyframes preview-pane-open {
    from {
        transform: translateX(80%);
        opacity: 0;
    }
}


// Features section container
.features-section- {

    // Left container
    &left {
        @include flex($align: center, $justify: center);
        width: 50%;
        position: relative;

        // Backdrop icons
        // Used as a decoration behind feature showcases
        .backdrop-icon {
            position: absolute;
            height: 100%;
            width: auto;
            max-width: 132%;
            transform: rotate(-10deg) scale(var(--icon-scale, 1));
            path {
                fill: none;
                stroke: var(--card-stroke-default);
                stroke-width: 0.25;
            }
        }

        // Showcase panels
        // Floating, transient surfaces representing different UI elements
        .showcase-panel {
            position: relative;
            user-select: none;
            border: 1px solid var(--surface-stroke-default);
            background-color: var(--background-base);
            border-radius: var(--overlay-corner-radius);
            box-shadow: 0 2.74416px 2.74416px rgb(0 0 0 / 3%),
                        0 5.48831px 5.48831px rgb(0 0 0 / 4%),
                        0 13.7208px 10.9766px rgb(0 0 0 / 5%),
                        0 20.5812px 20.5812px rgb(0 0 0 / 6%),
                        0 41.1623px 41.1623px rgb(0 0 0 / 7%),
                        0 96.0454px 89.1851px rgb(0 0 0 / 9%);
            font-family: "Segoe UI Variable Text", var(--font-family-sans-serif);

            // Disable user dragging on images to be consistent with Files
            img {
                -webkit-user-drag: none;
            }
        }
    }

    // Right container (info + feature cards)
    &right {
        flex: 0 0 auto;
        width: 50%;
    }
}

// Feature showcases

// Cloud integration showcase
.cloud-files-showcase {
    animation: feature-preview 500ms cubic-bezier(0.165, 0.84, 0.44, 1) backwards 400ms;
    width: 416px;
    max-width: 100%;

    // Files table (details view)
    table {
        white-space: nowrap;
        margin-bottom: 3px;
        width: 100%;
        border-collapse: collapse;
        line-height: 1.4rem;

        // Rows
        tr {
            height: 36px;
            position: relative;

            // Tables are rather limited with margins/ To get around
            // some of these limitations, I'm using apsuedoelement as
            // a replacement for background-color.
            &:not(:first-child) {
                &::after {
                    content: "";
                    position: absolute;
                    top: 3px;
                    left: 5px;
                    width: calc(100% - 10px);
                    height: 30px;
                    z-index: 0;
                    border-radius: var(--control-corner-radius);
                }
                &:hover::after {
                    background-color: var(--subtle-color-secondary);
                }
                &:active::after {
                    background-color: var(--subtle-color-tertiary);
                }
            }
        }

        // Table contents (headers and columns)
        td, th {
            position: relative;
            vertical-align: middle;
            z-index: 1;
            padding: 0 12px;
            color: var(--text-color-primary);

            // Blank first cell for the file icon
            &:first-child {
                border-left: none;
                padding-right: 6px;
                padding-left: 12px;
            }
        }

        // Table headers
        th {
            font-weight: 600;
            text-align: left;
            border-left: 1px solid var(--control-stroke-default);
            border-bottom: 1px solid var(--control-stroke-default);
            &:last-child {
                width: 100%;
            }
        }

        td {

            // Sync status icons
            &.status-success :global(svg) {
                color: var(--system-color-success);
            }
            &.status-sync :global(svg) {
                color: var(--system-color-attention);
            }
            :global(svg) {
                @include icon($size: 20px);
                animation: 250ms ease cloud-status-icon backwards calc(600ms + (100ms * var(--file-index)));
            }
        }
    }

    // Cloud provider icons
    .cloud-provider {
        position: absolute;
        z-index: 2;
        width: 108px;
        height: auto;
        filter: drop-shadow(0 4px 12px rgba(0, 0, 0, 0.25));
        transform: rotate(var(--provider-rotate));
        &:nth-child(1) {
            --provider-rotate: 5deg;
            bottom: 36px;
            left: -54px;
            animation: cloud-provider 250ms cubic-bezier(0.165, 0.84, 0.44, 1) backwards 800ms,
                       cloud-provider-float 10s ease infinite 1000ms;
        }
        &:nth-child(2) {
            --provider-rotate: -8deg;
            right: -54px;
            top: 12px;
            width: 128px;
            animation: cloud-provider 250ms cubic-bezier(0.165, 0.84, 0.44, 1) backwards 1000ms,
                       cloud-provider-float 10s ease infinite 1400ms;
        }
    }
}

// Preview pane showcase
.previewer-showcase {
    @include flex($align: center);

    // Preview pane sidebar
    .preview-pane {
        @include flex($direction: column);
        width: 260px;
        height: 390px;
        animation: 400ms cubic-bezier(0.1, 0.9, 0.2, 1) preview-pane-open backwards 800ms;
        border-radius: var(--overlay-corner-radius) 0 0 var(--overlay-corner-radius);

        // Inner preview pane elements
        // File preview and file metadata
        .preview,
        .metadata {
            padding: 8px;
        }

        // File preview
        // Main container for rich previewsT
        .preview {
            @include flex($align: center);
            flex: 0 0 auto;
            height: 144px;
        }

        // Rich preview elements
        img,
        iframe,
        :global(pre) {
            width: 100%;
            height: 100%;
            overflow: auto;
        }
        img {
            user-select: none;
            -webkit-user-drag: none;
            object-fit: contain;
        }
        iframe {
            border-radius: var(--control-corner-radius);   
        }
        :global {
            pre {
                margin: 0;
                user-select: text;
                font-family: var(--font-family-monospace);
                &::-webkit-scrollbar {
                    display: none;
                }
            }
        }
        
        // Grabber
        // Used for scaling up the preview size
        .grabber {
            @include flex($align: center, $justify: center);
            flex: 0 0 auto;
            width: 100%;
            height: 20px;
            cursor: n-resize;

            // Inner grabber
            &::before {
                content: "";
                position: absolute;
                background: var(--subtle-color-secondary);
                border-radius: 4px;
                height: 4px;
                width: 28px;
            }
        }

        // File metadata
        // Displays information relating to the relevant file
        .metadata {
            user-select: text;
            word-break: break-word;
            color: var(--text-color-primary);
            line-height: normal;
            font: {
                size: var(--control-font-size);
                weight: normal;
            }
        }

        // Metadata elements
        h4,
        h5 {
            margin: 0;
            text-align: center;
        }

        // Used to display file name
        h4 {
            margin-bottom: 5px;
            font: {
                size: 20px;
                weight: 700;
            }
        }

        // Used to display file extension
        h5 {
            font: {
                size: 18px;
                weight: normal;
            }
        }

        // Used as secondary headers for metadata entries
        h6 {
            user-select: none;
            margin: 0;
            margin-top: 8px;
            font: {
                size: var(--control-font-size);
                weight: 300;
            }
        }
    }

    // Files GridView
    // Serves as a picker for previewing files
    .files-grid {
        display: grid;
        grid-gap: 4px;
        padding: 12px;
        position: relative;
        z-index: 1;
        animation: feature-preview 500ms cubic-bezier(0.165, 0.84, 0.44, 1) backwards 400ms;

        // File entries
        .file {
            @include flex($direction: column, $justify: between, $align: center);
            width: 84px;
            height: 96px;
            padding: 12px;
            border-radius: var(--control-corner-radius);
            color: var(--text-color-primary);
            font-size: var(--control-font-size);
            &:hover {
                background-color: var(--subtle-color-secondary);
            }
            &:active {
                background-color: var(--subtle-color-tertiary);
            }
            &.selected {
                background-color: var(--subtle-color-secondary);
                border-radius: calc(var(--control-corner-radius) + 2px);
                box-shadow: inset 0 0 0 2px var(--accent-color-default),
                            inset 0 0 0 3px var(--background-base);
            }

            // File entry icon
            img {
                width: 88%;
                height: auto;
            }
        }
    }
}

// Tags showcase
.tags-showcase {
    .showcase-panel {
        animation: feature-preview 500ms cubic-bezier(0.165, 0.84, 0.44, 1) backwards 400ms;
        width: 328px;
        height: 260px;
    }
}

// <FeatureCard /> container
// Container element for selecting features to preview
.feature-cards-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 8px;

    // Small device support
    @media only screen and (max-width: 1164px) {

        // Stack cards vertically
        grid-template-columns: auto;
    }
}

// Features section small device support
@media only screen and (max-width: 924px) {
    .features-section- {

        // Hide showcases on mobile
        &left {
            display: none;
        }

        // Right portion of the section now takes up fullwidth
        &right {
            width: 100%;
            margin: 0;
        }
    }

    // HACK: Remove selected card styling on mobile
    // Figured this was both easier and faster than dealing with bind:innerWidth
    .feature-cards-container :global(.feature-card.selected) {
        border-color: transparent;
    }
}

/*
 * Section 4 (Themes)
 */

:global {

    // Outer section
    #themes-section {
        min-height: 600px; // I want to avoid cutting off the component showcase
        background-color: var(--card-background-secondary);
        border-radius: 0 0 var(--overlay-corner-radius) var(--overlay-corner-radius);
        overflow: hidden;

        // Inner section
        .page-section-inner {
            @include flex($align: center);
        }

        // HACK: --background-base is a fairly generic variable that makes more sense to style on themes other than default.
        &:not(.theme-1) {
            background-color: var(--background-base);
            
            // Use default accent color instead of dark-1 (see reasoning below)
            ::selection {
                background-color: var(--accent-color-default);
            }
        }

        // Themes
        // CSS variables behave rather strange.
        // Setting a scoped variable that changes the value
        // in another parent variable's hsla() function
        // doesn't actually update the actual parent color.
        //
        // This means that we are basically forced to hardcode
        // hex colors for our accent color, since we use hsla
        // calcs. That really sucks. /rant
        &.theme- {
            &2 {
                --focus-stroke-outer: #fff;
                --accent-color-default: #3ecc9c;
                --accent-color-secondary: #70ccad;
                --accent-color-tertiary: #339b78;
                --accent-text-default: var(--accent-color-default);
                --accent-text-tertiary: var(--accent-color-secondary);
                --text-color-primary: var(--accent-color-default);
                --text-color-tertiary: #a6aebf;
                --text-color-secondary: #a6aebf;
                --subtle-color-secondary: #363c4a;
                --subtle-color-tertiary: #2f3541;
                --background-base: #2b303a;
            }
            &3 {
                --focus-stroke-outer: #fff;
                --accent-color-default: #6441a4;
                --accent-color-secondary: #7d5bbf;
                --accent-color-tertiary: var(--accent-color-secondary);
                --accent-text-default: var(--text-color-tertiary);
                --accent-text-tertiary: var(--accent-color-secondary);
                --accent-text-contrast-primary: #ffffff;
                --accent-text-contrast-secondary: rgba(255, 255, 255, 0.6);
                --text-color-primary: #ffffff;
                --text-color-tertiary: #b19dd8;
                --text-color-secondary: #b19dd8;
                --subtle-color-secondary: #2c2642;
                --subtle-color-tertiary: var(--subtle-color-secondary);
                --background-base: #17141f;
            }
            &4 {
                --focus-stroke-outer: #000;
                --accent-color-default: #fff;
                --accent-color-secondary: rgba(255, 255, 255, 0.8);
                --accent-color-tertiary: rgba(255, 255, 255, 0.6);
                --accent-text-default: var(--text-color-tertiary);
                --accent-text-tertiary: var(--accent-text-default);
                --accent-text-contrast-primary: #000;
                --accent-text-contrast-secondary: var(--accent-text-contrast-primary);
                --text-color-primary: #000;
                --text-color-tertiary: #332500;
                --text-color-secondary: var(--text-color-primary);
                --subtle-color-secondary: #fff;
                --background-base: #feb400;
                .hyperlink-button {
                    &:hover {
                        background-color: rgba(0, 0, 0, 0.1);
                    }
                    &:active {
                        background-color: rgba(0, 0, 0, 0.2);
                    }
                }
            }
            &5 {
                --focus-stroke-outer: #fff;
                --accent-color-default: #eee8d5;
                --accent-color-secondary: #fdf6e3;
                --accent-color-tertiary: #e8e1c9;
                --accent-text-default: var(--text-color-tertiary);
                --accent-text-tertiary: var(--accent-color-secondary);
                --accent-text-contrast-primary: #586e75;
                --accent-text-contrast-secondary: #657b83;
                --text-color-primary: #fdf6e3;
                --text-color-tertiary: #93a1a1;
                --text-color-secondary: #839496;
                --subtle-color-secondary: #073642;
                --subtle-color-tertiary: #083945;
                --background-base: #002b36;
            }
            &6 {
                --focus-stroke-outer: #000;
                --accent-color-default: #88c0d0;
                --accent-color-secondary: #79b8ca;
                --accent-color-tertiary: #6bb1c4;
                --accent-text-default: var(--text-color-tertiary);
                --accent-text-tertiary: var(--text-color-secondary);
                --accent-text-contrast-primary: var(--text-color-primary);
                --accent-text-contrast-secondary: var(--text-color-tertiary);
                --text-color-primary: #2e3440;
                --text-color-tertiary: #4c566a;
                --text-color-secondary: var(--text-color-primary);
                --subtle-color-secondary: var(--accent-color-default);
                --background-base: #d8dee9;
                .hyperlink-button {
                    &:hover {
                        background-color: #e5e9f0;
                    }
                    &:active {
                        background-color: #eceff4;
                    }
                }
            }
        }

        // Position our component showcase
        // Seen on the right side of the section
        .component-showcase {
            position: absolute;
            right: -400px;
            transform: rotate(30deg);
        }
    }
}

// Main themes section content
// Encompasses the left side of the section
.themes-section-content {
    width: 52%;
    min-width: 478px;

    // Small device support
    // Since our component showcase will be hidden at this size, fill 100% of the available width.
    @media only screen and (max-width: 832px) {
        width: 100%;
        min-width: unset;
    }
}

// Theme picker
// Container for <ColorSwatch /> components
.theme-chooser {
    width: fit-content;
    margin-bottom: 24px;
    display: grid;
    grid: {
        template-columns: auto auto auto;
        gap: 12px;
    }
}

/*
 * Section 4 (Community)
 */

// Outer section
:global(#community-section) {
    overflow: hidden;

    // Center our buttons
    .buttons-spacer {
        justify-content: center;
    }
}

.community-section- {

    // Since we need to always contrast against a
    // light-ish background, we'll need to hardcode
    // some variables.
    &text {
        text-align: center; // Align text to center
        --background-base: #F3F3F3;
        --text-color-primary: #202020;
        --text-color-secondary: #282828;
        --text-color-tertiary: var(--text-color-secondary);
        --subtle-color-secondary: rgba(0, 0, 0, 0.035);
        --subtle-color-tertiary: rgba(0, 0, 0, 0.024);
        --subtle-color-disabled: rgba(255, 255, 255, 0);
        --accent-text-default: var(--accent-color-dark-3);
        --accent-text-tertiary: var(--accent-color-dark-2);

        // Align descriptions to center
        p {
            margin-left: auto;
            margin-right: auto;
        }
    }

    // Inner card element
    // Encompasses the content of the community section
    &card {
        @include flex($direction: column, $justify: center, $align: center);
        position: relative;
        z-index: 0;
        width: 100%;
        min-height: 600px;
        max-width: 2048px;
        padding: 72px 48px;
        border-radius: var(--overlay-corner-radius);
        background-color: #F9F9F9;
        box-shadow: 0 2.74416px 2.74416px rgb(0 0 0 / 3%),
                    0 5.48831px 5.48831px rgb(0 0 0 / 4%),
                    0 13.7208px 10.9766px rgb(0 0 0 / 5%),
                    0 20.5812px 20.5812px rgb(0 0 0 / 6%),
                    0 41.1623px 41.1623px rgb(0 0 0 / 7%),
                    0 96.0454px 89.1851px rgb(0 0 0 / 9%);

        // Background canvas -- RainbowCanvas2()
        canvas {
            z-index: -1;
            border-radius: var(--overlay-corner-radius);
            position: absolute;
            top: 0;
            left: 0;

            // This is necessary because threejs uses
            // inline styles instead of the native
            // width and height attributes on <canvas>
            // WHY?
            width: 100% !important;
            height: 100% !important;
        }
    }
}

// Contributors

// Left scroller animation
@keyframes contributors-left {
    to {
        transform: translateX(50%);
    }
}

// Right scroller animation
@keyframes contributors-right {
    to {
        transform: translateX(-50%);
    }
}

// Contributor cards
.contributors- {

    // Contributors container
    // Serves no other purpose other than spacing it from the main text.
    &container {
        position: relative;
        overflow: hidden;
        max-width: 2800px;

        // Preserve box-shadows when overflow is hidden
        padding: 128px 0;
        margin-top: calc(-128px + 48px);
        margin-bottom: -128px;

        // Fade gutters
        // Seamlessly fades incoming/outgoing cards into the section at large resolutions.
        &::before,
        &::after {
            content: "";
            position: absolute;
            z-index: 1;
            width: 96px;
            height: 100%;
        }
        &::before {
            left: 0;
            background-image: linear-gradient(90deg, var(--background-secondary), transparent);
        }
        &::after {
            right: 0;
            background: linear-gradient(90deg, transparent, var(--background-secondary));
        }
    }

    // Contributor rows
    &row {
        position: relative;
        white-space: nowrap;
        margin-bottom: 12px;

        // Space out contributor cards
        :global(.contributor) {
            margin-right: 12px;
        }

        // Add some variation between rows
        &:nth-child(even) {
            left: 24px;
            float: left;
            animation: contributors-right 80s linear infinite;
        }
        &:nth-child(odd) {
            left: -24px;
            float: right;
            animation: contributors-left 80s linear infinite;
        }

        // Prevent extra bottom margins
        &:last-child {
            margin: 0;
            animation-delay: 2s;
        }
    }
}

// Community section small device support
@media only screen and (max-width: 768px) {

    // We have less space to work with here,
    // so we'll decrease the padding of the card.
    .community-section-card {
        padding: 24px;

        // The header also starts to look bad when it
        // wraps toomuch, so decrease the font-size
        h2 {
            font-size: 3.2rem;
        }
    }
}