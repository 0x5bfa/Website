@use "../../../styles/mixins" as *;

// Cloud integration showcase
.cloud-files-showcase {
	width: 416px;
	max-width: 100%;
	animation: feature-preview 500ms cubic-bezier(0.165, 0.84, 0.44, 1) backwards 400ms;

	// Files table (details view)
	table {
		width: 100%;
		margin-bottom: 3px;
		border-collapse: collapse;
		line-height: 1.4rem;
		white-space: nowrap;

		// Rows
		tr {
			position: relative;
			height: 36px;

			// Tables are rather limited with margins/ To get around
			// some of these limitations, I'm using a pseudo-element as
			// a replacement for background-color.
			&:not(:first-child) {
				&::after {
					content: "";
					position: absolute;
					top: 3px;
					left: 5px;
					z-index: 0;
					width: calc(100% - 10px);
					height: 30px;
					border-radius: var(--control-corner-radius);
				}

				&:hover::after {
					background-color: var(--subtle-color-secondary);
				}

				&:active::after {
					background-color: var(--subtle-color-tertiary);
				}
			}
		}

		// Table contents (headers and columns)
		td, th {
			position: relative;
			z-index: 1;
			padding: 0 12px;
			color: var(--text-color-primary);
			vertical-align: middle;

			// Blank first cell for the file icon
			&:first-child {
				padding-right: 6px;
				padding-left: 12px;
				border-left: none;
			}
		}

		// Table headers
		th {
			border-bottom: 1px solid var(--control-stroke-default);
			border-left: 1px solid var(--control-stroke-default);
			font-weight: 600;
			text-align: left;

			&:last-child {
				width: 100%;
			}
		}

		td {

			// Sync status icons
			&.status-success :global(svg) {
				color: var(--system-color-success);
			}

			&.status-sync :global(svg) {
				color: var(--system-color-attention);
			}

			:global(svg) {
				@include icon($size: 20px);
				animation: 250ms ease feature-item-scale backwards calc(600ms + (100ms * var(--file-index)));
			}
		}
	}

	// Cloud provider icons
	.cloud-provider {
		position: absolute;
		z-index: 2;
		width: 108px;
		height: auto;
		transform: rotate(var(--provider-rotate));
		filter: drop-shadow(0 4px 12px rgba(0, 0, 0, 0.25));

		&:nth-child(1) {
			bottom: 36px;
			left: -54px;
			animation: cloud-provider 250ms cubic-bezier(0.165, 0.84, 0.44, 1) backwards 800ms,
			cloud-provider-float 10s ease infinite 1000ms;
			--provider-rotate: 5deg;
		}

		&:nth-child(2) {
			top: 12px;
			right: -54px;
			width: 128px;
			animation: cloud-provider 250ms cubic-bezier(0.165, 0.84, 0.44, 1) backwards 1000ms,
			cloud-provider-float 10s ease infinite 1400ms;
			--provider-rotate: -8deg;
		}
	}
}

// Cloud icon entrance animation
@keyframes cloud-provider {
	from {
		opacity: 0;
		transform: rotate(var(--provider-rotate)) scale(0.5);
	}
}

// Cloud icon float animation
@keyframes cloud-provider-float {
	0% {
		transform: rotate(var(--provider-rotate)) translateY(0);
	}
	50% {
		transform: rotate(calc(var(--provider-rotate) * -1)) translateY(-10px);
	}
	to {
		transform: rotate(var(--provider-rotate)) translateY(0);
	}
}